Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> P
Rule 1     P -> S PUNTOCOMA
Rule 2     P -> S PUNTOCOMA P
Rule 3     S -> SELECT A FROM T B
Rule 4     S -> DELETE FROM T Bp
Rule 5     S -> UPDATE T SET N W
Rule 6     S -> INSERT INTO T PARENTESIS Ap PARENTESIS VALUES Y
Rule 7     A -> TODO
Rule 8     A -> Ap
Rule 9     A -> M
Rule 10    Ap -> T PUNTO T
Rule 11    Ap -> T PUNTO T COMA Ap
Rule 12    M -> OP_M PARENTESIS Mp PARENTESIS
Rule 13    Mp -> TODO
Rule 14    Mp -> T PUNTO T
Rule 15    T -> ID
Rule 16    B -> Bp
Rule 17    B -> J T ON E
Rule 18    Bp -> W
Rule 19    Bp -> empty
Rule 20    W -> WHERE C
Rule 21    C -> NOT PARENTESIS F PARENTESIS
Rule 22    C -> F
Rule 23    F -> Fp
Rule 24    F -> Fp OP_L F
Rule 25    Fp -> T PUNTO T R V
Rule 26    R -> OP_R
Rule 27    R -> DISTINTO
Rule 28    V -> Q
Rule 29    V -> CADENA
Rule 30    V -> FECHA
Rule 31    V -> BOOL
Rule 32    Q -> INTEGER
Rule 33    Q -> DOUBLE
Rule 34    Q -> INTEGER U Q
Rule 35    Q -> DOUBLE U Q
Rule 36    U -> OP_A_S
Rule 37    U -> OP_A_C
Rule 38    J -> Jp JOIN
Rule 39    Jp -> TIPO_JOIN
Rule 40    E -> T PUNTO T OP_R T PUNTO T
Rule 41    N -> T PUNTO T ASIGNAR V
Rule 42    N -> T PUNTO T ASIGNAR V COMA N
Rule 43    Vp -> V
Rule 44    Vp -> V COMA Vp
Rule 45    Y -> PARENTESIS Vp PARENTESIS
Rule 46    Y -> PARENTESIS Vp PARENTESIS COMA Y
Rule 47    empty -> <empty>

Terminals, with rules where they appear

ASIGNAR              : 41 42
BOOL                 : 31
CADENA               : 29
COMA                 : 11 42 44 46
DELETE               : 4
DISTINTO             : 27
DOUBLE               : 33 35
FECHA                : 30
FROM                 : 3 4
ID                   : 15
INSERT               : 6
INTEGER              : 32 34
INTO                 : 6
JOIN                 : 38
NOT                  : 21
ON                   : 17
OP_A_C               : 37
OP_A_S               : 36
OP_L                 : 24
OP_M                 : 12
OP_R                 : 26 40
PARENTESIS           : 6 6 12 12 21 21 45 45 46 46
PUNTO                : 10 11 14 25 40 40 41 42
PUNTOCOMA            : 1 2
SELECT               : 3
SET                  : 5
TIPO_JOIN            : 39
TODO                 : 7 13
UPDATE               : 5
VALUES               : 6
WHERE                : 20
error                : 

Nonterminals, with rules where they appear

A                    : 3
Ap                   : 6 8 11
B                    : 3
Bp                   : 4 16
C                    : 20
E                    : 17
F                    : 21 22 24
Fp                   : 23 24
J                    : 17
Jp                   : 38
M                    : 9
Mp                   : 12
N                    : 5 42
P                    : 2 0
Q                    : 28 34 35
R                    : 25
S                    : 1 2
T                    : 3 4 5 6 10 10 11 11 14 14 17 25 25 40 40 40 40 41 41 42 42
U                    : 34 35
V                    : 25 41 42 43 44
Vp                   : 44 45 46
W                    : 5 18
Y                    : 6 46
empty                : 19

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . S PUNTOCOMA
    (2) P -> . S PUNTOCOMA P
    (3) S -> . SELECT A FROM T B
    (4) S -> . DELETE FROM T Bp
    (5) S -> . UPDATE T SET N W
    (6) S -> . INSERT INTO T PARENTESIS Ap PARENTESIS VALUES Y

    SELECT          shift and go to state 3
    DELETE          shift and go to state 4
    UPDATE          shift and go to state 5
    INSERT          shift and go to state 6

    P                              shift and go to state 1
    S                              shift and go to state 2

state 1

    (0) S' -> P .



state 2

    (1) P -> S . PUNTOCOMA
    (2) P -> S . PUNTOCOMA P

    PUNTOCOMA       shift and go to state 7


state 3

    (3) S -> SELECT . A FROM T B
    (7) A -> . TODO
    (8) A -> . Ap
    (9) A -> . M
    (10) Ap -> . T PUNTO T
    (11) Ap -> . T PUNTO T COMA Ap
    (12) M -> . OP_M PARENTESIS Mp PARENTESIS
    (15) T -> . ID

    TODO            shift and go to state 10
    OP_M            shift and go to state 13
    ID              shift and go to state 14

    A                              shift and go to state 8
    T                              shift and go to state 9
    Ap                             shift and go to state 11
    M                              shift and go to state 12

state 4

    (4) S -> DELETE . FROM T Bp

    FROM            shift and go to state 15


state 5

    (5) S -> UPDATE . T SET N W
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 16

state 6

    (6) S -> INSERT . INTO T PARENTESIS Ap PARENTESIS VALUES Y

    INTO            shift and go to state 17


state 7

    (1) P -> S PUNTOCOMA .
    (2) P -> S PUNTOCOMA . P
    (1) P -> . S PUNTOCOMA
    (2) P -> . S PUNTOCOMA P
    (3) S -> . SELECT A FROM T B
    (4) S -> . DELETE FROM T Bp
    (5) S -> . UPDATE T SET N W
    (6) S -> . INSERT INTO T PARENTESIS Ap PARENTESIS VALUES Y

    $end            reduce using rule 1 (P -> S PUNTOCOMA .)
    SELECT          shift and go to state 3
    DELETE          shift and go to state 4
    UPDATE          shift and go to state 5
    INSERT          shift and go to state 6

    S                              shift and go to state 2
    P                              shift and go to state 18

state 8

    (3) S -> SELECT A . FROM T B

    FROM            shift and go to state 19


state 9

    (10) Ap -> T . PUNTO T
    (11) Ap -> T . PUNTO T COMA Ap

    PUNTO           shift and go to state 20


state 10

    (7) A -> TODO .

    FROM            reduce using rule 7 (A -> TODO .)


state 11

    (8) A -> Ap .

    FROM            reduce using rule 8 (A -> Ap .)


state 12

    (9) A -> M .

    FROM            reduce using rule 9 (A -> M .)


state 13

    (12) M -> OP_M . PARENTESIS Mp PARENTESIS

    PARENTESIS      shift and go to state 21


state 14

    (15) T -> ID .

    PUNTO           reduce using rule 15 (T -> ID .)
    SET             reduce using rule 15 (T -> ID .)
    WHERE           reduce using rule 15 (T -> ID .)
    PUNTOCOMA       reduce using rule 15 (T -> ID .)
    PARENTESIS      reduce using rule 15 (T -> ID .)
    TIPO_JOIN       reduce using rule 15 (T -> ID .)
    COMA            reduce using rule 15 (T -> ID .)
    FROM            reduce using rule 15 (T -> ID .)
    ON              reduce using rule 15 (T -> ID .)
    ASIGNAR         reduce using rule 15 (T -> ID .)
    OP_R            reduce using rule 15 (T -> ID .)
    DISTINTO        reduce using rule 15 (T -> ID .)


state 15

    (4) S -> DELETE FROM . T Bp
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 22

state 16

    (5) S -> UPDATE T . SET N W

    SET             shift and go to state 23


state 17

    (6) S -> INSERT INTO . T PARENTESIS Ap PARENTESIS VALUES Y
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 24

state 18

    (2) P -> S PUNTOCOMA P .

    $end            reduce using rule 2 (P -> S PUNTOCOMA P .)


state 19

    (3) S -> SELECT A FROM . T B
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 25

state 20

    (10) Ap -> T PUNTO . T
    (11) Ap -> T PUNTO . T COMA Ap
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 26

state 21

    (12) M -> OP_M PARENTESIS . Mp PARENTESIS
    (13) Mp -> . TODO
    (14) Mp -> . T PUNTO T
    (15) T -> . ID

    TODO            shift and go to state 28
    ID              shift and go to state 14

    Mp                             shift and go to state 27
    T                              shift and go to state 29

state 22

    (4) S -> DELETE FROM T . Bp
    (18) Bp -> . W
    (19) Bp -> . empty
    (20) W -> . WHERE C
    (47) empty -> .

    WHERE           shift and go to state 33
    PUNTOCOMA       reduce using rule 47 (empty -> .)

    Bp                             shift and go to state 30
    W                              shift and go to state 31
    empty                          shift and go to state 32

state 23

    (5) S -> UPDATE T SET . N W
    (41) N -> . T PUNTO T ASIGNAR V
    (42) N -> . T PUNTO T ASIGNAR V COMA N
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 34
    N                              shift and go to state 35

state 24

    (6) S -> INSERT INTO T . PARENTESIS Ap PARENTESIS VALUES Y

    PARENTESIS      shift and go to state 36


state 25

    (3) S -> SELECT A FROM T . B
    (16) B -> . Bp
    (17) B -> . J T ON E
    (18) Bp -> . W
    (19) Bp -> . empty
    (38) J -> . Jp JOIN
    (20) W -> . WHERE C
    (47) empty -> .
    (39) Jp -> . TIPO_JOIN

    WHERE           shift and go to state 33
    PUNTOCOMA       reduce using rule 47 (empty -> .)
    TIPO_JOIN       shift and go to state 41

    B                              shift and go to state 37
    Bp                             shift and go to state 38
    J                              shift and go to state 39
    W                              shift and go to state 31
    empty                          shift and go to state 32
    Jp                             shift and go to state 40

state 26

    (10) Ap -> T PUNTO T .
    (11) Ap -> T PUNTO T . COMA Ap

    FROM            reduce using rule 10 (Ap -> T PUNTO T .)
    PARENTESIS      reduce using rule 10 (Ap -> T PUNTO T .)
    COMA            shift and go to state 42


state 27

    (12) M -> OP_M PARENTESIS Mp . PARENTESIS

    PARENTESIS      shift and go to state 43


state 28

    (13) Mp -> TODO .

    PARENTESIS      reduce using rule 13 (Mp -> TODO .)


state 29

    (14) Mp -> T . PUNTO T

    PUNTO           shift and go to state 44


state 30

    (4) S -> DELETE FROM T Bp .

    PUNTOCOMA       reduce using rule 4 (S -> DELETE FROM T Bp .)


state 31

    (18) Bp -> W .

    PUNTOCOMA       reduce using rule 18 (Bp -> W .)


state 32

    (19) Bp -> empty .

    PUNTOCOMA       reduce using rule 19 (Bp -> empty .)


state 33

    (20) W -> WHERE . C
    (21) C -> . NOT PARENTESIS F PARENTESIS
    (22) C -> . F
    (23) F -> . Fp
    (24) F -> . Fp OP_L F
    (25) Fp -> . T PUNTO T R V
    (15) T -> . ID

    NOT             shift and go to state 46
    ID              shift and go to state 14

    C                              shift and go to state 45
    F                              shift and go to state 47
    Fp                             shift and go to state 48
    T                              shift and go to state 49

state 34

    (41) N -> T . PUNTO T ASIGNAR V
    (42) N -> T . PUNTO T ASIGNAR V COMA N

    PUNTO           shift and go to state 50


state 35

    (5) S -> UPDATE T SET N . W
    (20) W -> . WHERE C

    WHERE           shift and go to state 33

    W                              shift and go to state 51

state 36

    (6) S -> INSERT INTO T PARENTESIS . Ap PARENTESIS VALUES Y
    (10) Ap -> . T PUNTO T
    (11) Ap -> . T PUNTO T COMA Ap
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 9
    Ap                             shift and go to state 52

state 37

    (3) S -> SELECT A FROM T B .

    PUNTOCOMA       reduce using rule 3 (S -> SELECT A FROM T B .)


state 38

    (16) B -> Bp .

    PUNTOCOMA       reduce using rule 16 (B -> Bp .)


state 39

    (17) B -> J . T ON E
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 53

state 40

    (38) J -> Jp . JOIN

    JOIN            shift and go to state 54


state 41

    (39) Jp -> TIPO_JOIN .

    JOIN            reduce using rule 39 (Jp -> TIPO_JOIN .)


state 42

    (11) Ap -> T PUNTO T COMA . Ap
    (10) Ap -> . T PUNTO T
    (11) Ap -> . T PUNTO T COMA Ap
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 9
    Ap                             shift and go to state 55

state 43

    (12) M -> OP_M PARENTESIS Mp PARENTESIS .

    FROM            reduce using rule 12 (M -> OP_M PARENTESIS Mp PARENTESIS .)


state 44

    (14) Mp -> T PUNTO . T
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 56

state 45

    (20) W -> WHERE C .

    PUNTOCOMA       reduce using rule 20 (W -> WHERE C .)


state 46

    (21) C -> NOT . PARENTESIS F PARENTESIS

    PARENTESIS      shift and go to state 57


state 47

    (22) C -> F .

    PUNTOCOMA       reduce using rule 22 (C -> F .)


state 48

    (23) F -> Fp .
    (24) F -> Fp . OP_L F

    PUNTOCOMA       reduce using rule 23 (F -> Fp .)
    PARENTESIS      reduce using rule 23 (F -> Fp .)
    OP_L            shift and go to state 58


state 49

    (25) Fp -> T . PUNTO T R V

    PUNTO           shift and go to state 59


state 50

    (41) N -> T PUNTO . T ASIGNAR V
    (42) N -> T PUNTO . T ASIGNAR V COMA N
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 60

state 51

    (5) S -> UPDATE T SET N W .

    PUNTOCOMA       reduce using rule 5 (S -> UPDATE T SET N W .)


state 52

    (6) S -> INSERT INTO T PARENTESIS Ap . PARENTESIS VALUES Y

    PARENTESIS      shift and go to state 61


state 53

    (17) B -> J T . ON E

    ON              shift and go to state 62


state 54

    (38) J -> Jp JOIN .

    ID              reduce using rule 38 (J -> Jp JOIN .)


state 55

    (11) Ap -> T PUNTO T COMA Ap .

    FROM            reduce using rule 11 (Ap -> T PUNTO T COMA Ap .)
    PARENTESIS      reduce using rule 11 (Ap -> T PUNTO T COMA Ap .)


state 56

    (14) Mp -> T PUNTO T .

    PARENTESIS      reduce using rule 14 (Mp -> T PUNTO T .)


state 57

    (21) C -> NOT PARENTESIS . F PARENTESIS
    (23) F -> . Fp
    (24) F -> . Fp OP_L F
    (25) Fp -> . T PUNTO T R V
    (15) T -> . ID

    ID              shift and go to state 14

    F                              shift and go to state 63
    Fp                             shift and go to state 48
    T                              shift and go to state 49

state 58

    (24) F -> Fp OP_L . F
    (23) F -> . Fp
    (24) F -> . Fp OP_L F
    (25) Fp -> . T PUNTO T R V
    (15) T -> . ID

    ID              shift and go to state 14

    Fp                             shift and go to state 48
    F                              shift and go to state 64
    T                              shift and go to state 49

state 59

    (25) Fp -> T PUNTO . T R V
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 65

state 60

    (41) N -> T PUNTO T . ASIGNAR V
    (42) N -> T PUNTO T . ASIGNAR V COMA N

    ASIGNAR         shift and go to state 66


state 61

    (6) S -> INSERT INTO T PARENTESIS Ap PARENTESIS . VALUES Y

    VALUES          shift and go to state 67


state 62

    (17) B -> J T ON . E
    (40) E -> . T PUNTO T OP_R T PUNTO T
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 68
    E                              shift and go to state 69

state 63

    (21) C -> NOT PARENTESIS F . PARENTESIS

    PARENTESIS      shift and go to state 70


state 64

    (24) F -> Fp OP_L F .

    PUNTOCOMA       reduce using rule 24 (F -> Fp OP_L F .)
    PARENTESIS      reduce using rule 24 (F -> Fp OP_L F .)


state 65

    (25) Fp -> T PUNTO T . R V
    (26) R -> . OP_R
    (27) R -> . DISTINTO

    OP_R            shift and go to state 72
    DISTINTO        shift and go to state 73

    R                              shift and go to state 71

state 66

    (41) N -> T PUNTO T ASIGNAR . V
    (42) N -> T PUNTO T ASIGNAR . V COMA N
    (28) V -> . Q
    (29) V -> . CADENA
    (30) V -> . FECHA
    (31) V -> . BOOL
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    CADENA          shift and go to state 76
    FECHA           shift and go to state 77
    BOOL            shift and go to state 78
    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    V                              shift and go to state 74
    Q                              shift and go to state 75

state 67

    (6) S -> INSERT INTO T PARENTESIS Ap PARENTESIS VALUES . Y
    (45) Y -> . PARENTESIS Vp PARENTESIS
    (46) Y -> . PARENTESIS Vp PARENTESIS COMA Y

    PARENTESIS      shift and go to state 81

    Y                              shift and go to state 82

state 68

    (40) E -> T . PUNTO T OP_R T PUNTO T

    PUNTO           shift and go to state 83


state 69

    (17) B -> J T ON E .

    PUNTOCOMA       reduce using rule 17 (B -> J T ON E .)


state 70

    (21) C -> NOT PARENTESIS F PARENTESIS .

    PUNTOCOMA       reduce using rule 21 (C -> NOT PARENTESIS F PARENTESIS .)


state 71

    (25) Fp -> T PUNTO T R . V
    (28) V -> . Q
    (29) V -> . CADENA
    (30) V -> . FECHA
    (31) V -> . BOOL
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    CADENA          shift and go to state 76
    FECHA           shift and go to state 77
    BOOL            shift and go to state 78
    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    V                              shift and go to state 84
    Q                              shift and go to state 75

state 72

    (26) R -> OP_R .

    CADENA          reduce using rule 26 (R -> OP_R .)
    FECHA           reduce using rule 26 (R -> OP_R .)
    BOOL            reduce using rule 26 (R -> OP_R .)
    INTEGER         reduce using rule 26 (R -> OP_R .)
    DOUBLE          reduce using rule 26 (R -> OP_R .)


state 73

    (27) R -> DISTINTO .

    CADENA          reduce using rule 27 (R -> DISTINTO .)
    FECHA           reduce using rule 27 (R -> DISTINTO .)
    BOOL            reduce using rule 27 (R -> DISTINTO .)
    INTEGER         reduce using rule 27 (R -> DISTINTO .)
    DOUBLE          reduce using rule 27 (R -> DISTINTO .)


state 74

    (41) N -> T PUNTO T ASIGNAR V .
    (42) N -> T PUNTO T ASIGNAR V . COMA N

    WHERE           reduce using rule 41 (N -> T PUNTO T ASIGNAR V .)
    COMA            shift and go to state 85


state 75

    (28) V -> Q .

    COMA            reduce using rule 28 (V -> Q .)
    WHERE           reduce using rule 28 (V -> Q .)
    OP_L            reduce using rule 28 (V -> Q .)
    PUNTOCOMA       reduce using rule 28 (V -> Q .)
    PARENTESIS      reduce using rule 28 (V -> Q .)


state 76

    (29) V -> CADENA .

    COMA            reduce using rule 29 (V -> CADENA .)
    WHERE           reduce using rule 29 (V -> CADENA .)
    OP_L            reduce using rule 29 (V -> CADENA .)
    PUNTOCOMA       reduce using rule 29 (V -> CADENA .)
    PARENTESIS      reduce using rule 29 (V -> CADENA .)


state 77

    (30) V -> FECHA .

    COMA            reduce using rule 30 (V -> FECHA .)
    WHERE           reduce using rule 30 (V -> FECHA .)
    OP_L            reduce using rule 30 (V -> FECHA .)
    PUNTOCOMA       reduce using rule 30 (V -> FECHA .)
    PARENTESIS      reduce using rule 30 (V -> FECHA .)


state 78

    (31) V -> BOOL .

    COMA            reduce using rule 31 (V -> BOOL .)
    WHERE           reduce using rule 31 (V -> BOOL .)
    OP_L            reduce using rule 31 (V -> BOOL .)
    PUNTOCOMA       reduce using rule 31 (V -> BOOL .)
    PARENTESIS      reduce using rule 31 (V -> BOOL .)


state 79

    (32) Q -> INTEGER .
    (34) Q -> INTEGER . U Q
    (36) U -> . OP_A_S
    (37) U -> . OP_A_C

    COMA            reduce using rule 32 (Q -> INTEGER .)
    WHERE           reduce using rule 32 (Q -> INTEGER .)
    OP_L            reduce using rule 32 (Q -> INTEGER .)
    PUNTOCOMA       reduce using rule 32 (Q -> INTEGER .)
    PARENTESIS      reduce using rule 32 (Q -> INTEGER .)
    OP_A_S          shift and go to state 87
    OP_A_C          shift and go to state 88

    U                              shift and go to state 86

state 80

    (33) Q -> DOUBLE .
    (35) Q -> DOUBLE . U Q
    (36) U -> . OP_A_S
    (37) U -> . OP_A_C

    COMA            reduce using rule 33 (Q -> DOUBLE .)
    WHERE           reduce using rule 33 (Q -> DOUBLE .)
    OP_L            reduce using rule 33 (Q -> DOUBLE .)
    PUNTOCOMA       reduce using rule 33 (Q -> DOUBLE .)
    PARENTESIS      reduce using rule 33 (Q -> DOUBLE .)
    OP_A_S          shift and go to state 87
    OP_A_C          shift and go to state 88

    U                              shift and go to state 89

state 81

    (45) Y -> PARENTESIS . Vp PARENTESIS
    (46) Y -> PARENTESIS . Vp PARENTESIS COMA Y
    (43) Vp -> . V
    (44) Vp -> . V COMA Vp
    (28) V -> . Q
    (29) V -> . CADENA
    (30) V -> . FECHA
    (31) V -> . BOOL
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    CADENA          shift and go to state 76
    FECHA           shift and go to state 77
    BOOL            shift and go to state 78
    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    Vp                             shift and go to state 90
    V                              shift and go to state 91
    Q                              shift and go to state 75

state 82

    (6) S -> INSERT INTO T PARENTESIS Ap PARENTESIS VALUES Y .

    PUNTOCOMA       reduce using rule 6 (S -> INSERT INTO T PARENTESIS Ap PARENTESIS VALUES Y .)


state 83

    (40) E -> T PUNTO . T OP_R T PUNTO T
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 92

state 84

    (25) Fp -> T PUNTO T R V .

    OP_L            reduce using rule 25 (Fp -> T PUNTO T R V .)
    PUNTOCOMA       reduce using rule 25 (Fp -> T PUNTO T R V .)
    PARENTESIS      reduce using rule 25 (Fp -> T PUNTO T R V .)


state 85

    (42) N -> T PUNTO T ASIGNAR V COMA . N
    (41) N -> . T PUNTO T ASIGNAR V
    (42) N -> . T PUNTO T ASIGNAR V COMA N
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 34
    N                              shift and go to state 93

state 86

    (34) Q -> INTEGER U . Q
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    Q                              shift and go to state 94

state 87

    (36) U -> OP_A_S .

    INTEGER         reduce using rule 36 (U -> OP_A_S .)
    DOUBLE          reduce using rule 36 (U -> OP_A_S .)


state 88

    (37) U -> OP_A_C .

    INTEGER         reduce using rule 37 (U -> OP_A_C .)
    DOUBLE          reduce using rule 37 (U -> OP_A_C .)


state 89

    (35) Q -> DOUBLE U . Q
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    Q                              shift and go to state 95

state 90

    (45) Y -> PARENTESIS Vp . PARENTESIS
    (46) Y -> PARENTESIS Vp . PARENTESIS COMA Y

    PARENTESIS      shift and go to state 96


state 91

    (43) Vp -> V .
    (44) Vp -> V . COMA Vp

    PARENTESIS      reduce using rule 43 (Vp -> V .)
    COMA            shift and go to state 97


state 92

    (40) E -> T PUNTO T . OP_R T PUNTO T

    OP_R            shift and go to state 98


state 93

    (42) N -> T PUNTO T ASIGNAR V COMA N .

    WHERE           reduce using rule 42 (N -> T PUNTO T ASIGNAR V COMA N .)


state 94

    (34) Q -> INTEGER U Q .

    COMA            reduce using rule 34 (Q -> INTEGER U Q .)
    WHERE           reduce using rule 34 (Q -> INTEGER U Q .)
    OP_L            reduce using rule 34 (Q -> INTEGER U Q .)
    PUNTOCOMA       reduce using rule 34 (Q -> INTEGER U Q .)
    PARENTESIS      reduce using rule 34 (Q -> INTEGER U Q .)


state 95

    (35) Q -> DOUBLE U Q .

    COMA            reduce using rule 35 (Q -> DOUBLE U Q .)
    WHERE           reduce using rule 35 (Q -> DOUBLE U Q .)
    OP_L            reduce using rule 35 (Q -> DOUBLE U Q .)
    PUNTOCOMA       reduce using rule 35 (Q -> DOUBLE U Q .)
    PARENTESIS      reduce using rule 35 (Q -> DOUBLE U Q .)


state 96

    (45) Y -> PARENTESIS Vp PARENTESIS .
    (46) Y -> PARENTESIS Vp PARENTESIS . COMA Y

    PUNTOCOMA       reduce using rule 45 (Y -> PARENTESIS Vp PARENTESIS .)
    COMA            shift and go to state 99


state 97

    (44) Vp -> V COMA . Vp
    (43) Vp -> . V
    (44) Vp -> . V COMA Vp
    (28) V -> . Q
    (29) V -> . CADENA
    (30) V -> . FECHA
    (31) V -> . BOOL
    (32) Q -> . INTEGER
    (33) Q -> . DOUBLE
    (34) Q -> . INTEGER U Q
    (35) Q -> . DOUBLE U Q

    CADENA          shift and go to state 76
    FECHA           shift and go to state 77
    BOOL            shift and go to state 78
    INTEGER         shift and go to state 79
    DOUBLE          shift and go to state 80

    V                              shift and go to state 91
    Vp                             shift and go to state 100
    Q                              shift and go to state 75

state 98

    (40) E -> T PUNTO T OP_R . T PUNTO T
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 101

state 99

    (46) Y -> PARENTESIS Vp PARENTESIS COMA . Y
    (45) Y -> . PARENTESIS Vp PARENTESIS
    (46) Y -> . PARENTESIS Vp PARENTESIS COMA Y

    PARENTESIS      shift and go to state 81

    Y                              shift and go to state 102

state 100

    (44) Vp -> V COMA Vp .

    PARENTESIS      reduce using rule 44 (Vp -> V COMA Vp .)


state 101

    (40) E -> T PUNTO T OP_R T . PUNTO T

    PUNTO           shift and go to state 103


state 102

    (46) Y -> PARENTESIS Vp PARENTESIS COMA Y .

    PUNTOCOMA       reduce using rule 46 (Y -> PARENTESIS Vp PARENTESIS COMA Y .)


state 103

    (40) E -> T PUNTO T OP_R T PUNTO . T
    (15) T -> . ID

    ID              shift and go to state 14

    T                              shift and go to state 104

state 104

    (40) E -> T PUNTO T OP_R T PUNTO T .

    PUNTOCOMA       reduce using rule 40 (E -> T PUNTO T OP_R T PUNTO T .)

